/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../app/services/types.generated';

import { api } from '../../app/services/baseApi';
export type GetTodosQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type GetTodosQuery = { __typename?: 'Query', allTodos?: { __typename?: 'TodosConnection', nodes: Array<{ __typename?: 'Todo', id: number, description: string, completed: boolean }> } };


export const GetTodosDocument = `
    query getTodos {
  allTodos {
    nodes {
      id
      description
      completed
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    getTodos: build.query<GetTodosQuery, GetTodosQueryVariables | void>({
      query: (variables) => ({ document: GetTodosDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetTodosQuery, useLazyGetTodosQuery } = injectedRtkApi;

